{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClickHandler","a","delete","onShowClick","name","email","phone","className","onClick","bind","style","cursor","color","float","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContacts","post","history","push","target","EditContact","updContact","match","params","put","Header","branding","About","NotFoundPage","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1e275c1d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onDeleteClickHandler = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-caret-square-down\"\n                />{\" \"}\n                <i\n                  onClick={this.onDeleteClickHandler.bind(this, id, dispatch)}\n                  className=\"fas fa-trash-alt\"\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\n                />\n                <Link to={`edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      float: \"right\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\"> Email :{email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\nexport class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-info\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\"> {error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phonenumber is required\"\n        }\n      });\n      return;\n    }\n    const newContacts = { name, email, phone };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContacts\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phonenumber..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    this.setState({\n      name: res.data.name,\n      email: res.data.email,\n      phone: res.data.phone\n    });\n  }\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phonenumber is required\"\n        }\n      });\n      return;\n    }\n\n    const updContact = { name, email, phone };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name..\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email..\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phonenumber..\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage Contacts</p>\n      <p className=\"text-secondary\">version 1.0.1</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> page Not Found{\" \"}\n      </h1>\n      <p className=\"lead\">The page does not exist </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFoundPage from \"./components/pages/NotFoundPage\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/edit/:id\" component={EditContact} />\n              <Route\n                exact\n                path={[\"/contact/add\", \"/add\"]}\n                component={AddContact}\n              />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}